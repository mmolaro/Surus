% Generated by roxygen2 (4.0.2): do not edit by hand
\name{AnomalyDetection.rpca}
\alias{AnomalyDetection.rpca}
\title{Time Series Anomaly Detection}
\usage{
AnomalyDetection.rpca(X, frequency = 7, dates = NULL, autodiff = T,
  forcediff = F, scale = T, L.penalty = 1,
  s.penalty = 1.4/sqrt(max(frequency, ifelse(is.data.frame(X), nrow(X),
  length(X))/frequency)), verbose = F)
}
\arguments{
\item{X}{a vector representing a time series, or a data frame where columns are time series.
The length of this vector should be divisible by frequency.
If X is a vector it will be cast to a matrix of dimension frequency by length(X)/frequency}

\item{frequency}{the frequency of the seasonality of X}

\item{dates}{optional vector of dates to be used as a time index in the output}

\item{autodiff}{boolean. If true, use the Augmented Dickey Fuller Test to determine
if differencing is needed to make X stationary}

\item{forcediff}{boolean. If true, always compute differences}

\item{scale}{boolean. If true normalize the time series to zero mean and unit variance}

\item{L.penalty}{a scalar for the amount of thresholding in determining the low rank approximation for X.
The default values are chosen to correspond to the smart thresholding values described in Candes'
Stable Principal Component Pursuit}

\item{s.penalty}{a scalar for the amount of thresholding in determining the separation between noise and sparse outliers
The default values are chosen to correspond to the smart thresholding values described in Zhou's
Stable Principal Component Pursuit}

\item{verbose}{boolean. If true print status updates while running optimization program}
}
\value{
\itemize{
  \item X_transform. The transformation applied to the time series,
  can be the identity or could be differencing
  \item L_transform. The low rank component in the transformed space
  \item S_transform. The sparse outliers in the transformed space
  \item E_transform. The noise in the transformed space
  \item X_original. The original time series
  \item time. The time index
  \item name. The name of the time series if X was a named data frame
}
}
\description{
Fast C++ implementation of time series anomaly detection using Robust Principal Component Pursuit
}
\details{
Robust Principal Component Pursuit is a matrix decomposition algorithm that seeks
to separate a matrix X into the sum of three parts X = L + S + E. L is a low rank matrix representing
a smooth X, S is a sparse matrix containing corrupted data, and E is noise. To convert a time series
into the matrix X we take advantage of seasonality so that each column represents one full period, for
example for weekly seasonality each row is a day of week and one column is one full week.

While computing the low rank matrix L we take an SVD of X and soft threshold the singular values.
This approach allows us to dampen all anomalies across the board simultaneously making the method
robust to multiple anomalies. Most techniques such as time series regression and moving averages
are not robust when there are two or more anomalies present.

Empirical tests show that identifying anomalies is easier if X is stationary.
The Augmented Dickey Fuller Test is used to test for stationarity - if X is not stationary
then the time series is differenced before calling RPCP. While this test is abstracted away
from the user differencing can be forced by setting the forcediff parameter.

The thresholding values can be tuned for different applications, however we strongly
recommend using the defaults which were proposed by Zhou.
For more details on the choice of L.penalty and s.penalty
please refer to Zhou's 2010 paper on Stable Principal Component Pursuit.

The implementation of RPCP is done in C++ for high performance through RCpp.
This function simply preprocesses the time series and calls RcppRPCP.
}
\examples{
frequency = 7
numPeriods = 10
ts.sinusoidal = sin((2 * pi / frequency ) * 1:(numPeriods * frequency))
ts = ts.sinusoidal
ts = sin((2 * pi / frequency ) * 1:(numPeriods * frequency))
ts[58:60] = 100
ggplot_AnomalyDetection.rpca(AnomalyDetection.rpca(ts)) + ggplot2::theme_grey(base_size = 25)
}
\references{
The following are recommended educational material:
\itemize{
  \item Candes' paper on RPCP \url{http://statweb.stanford.edu/~candes/papers/RobustPCA.pdf}
  \item Zhou's follow up paper on Stable PCP \url{http://arxiv.org/abs/1001.2363}
  \item Metamarkets Tech Blog on anomalies in time \url{https://metamarkets.com/2012/algorithmic-trendspotting-the-meaning-of-interesting/}
}
}

